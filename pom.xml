<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.distributed</groupId>
    <artifactId>spring-distributed-docker</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <description>微服务</description>
    <modules>
        <module>distributed-common-UUID</module>
        <module>distributed-eurekaserver</module>
        <module>distributed-oauth</module>
        <module>distributed-activiti</module>
        <module>distributed-zuul</module>
    </modules>

    <developers>
        <developer>
            <name>张勇</name>
            <email>zy349101912@gmail.com</email>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <druid.version>1.1.10</druid.version>
        <generator-version>1.0.0-SNAPSHOT</generator-version>
<!--        <lombok.version>1.18.8</lombok.version>-->
        <function.version>1.0</function.version>
        <mysql-version>8.0.16</mysql-version>
        <mybatis-spring-version>1.3.2</mybatis-spring-version>
        <fastjson.version>1.2.62</fastjson.version>
        <project-t.version>1.0-SNAPSHOT</project-t.version>
        <!-- spring cloud体系 -->
        <spring-cloud.version>Hoxton.M3</spring-cloud.version>
        <spring-cloud-child.verion>2.2.0.M3</spring-cloud-child.verion>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--            &lt;!&ndash; 解决版本冲突 &ndash;&gt;-->
            <!--            <dependency>-->
            <!--                <groupId>io.spring.platform</groupId>-->
            <!--                <artifactId>platform-bom</artifactId>-->
            <!--                <version>Brussels-SR10</version>-->
            <!--                <type>pom</type>-->
            <!--                <scope>import</scope>-->
            <!--            </dependency>-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 权限认证 Start -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-oauth2</artifactId>
                <version>${spring-cloud-child.verion}</version>
            </dependency>
<!--            <dependency>-->
<!--                <groupId>org.springframework.cloud</groupId>-->
<!--                <artifactId>spring-cloud-starter-security</artifactId>-->
<!--                <version>${spring-cloud-child.verion}</version>-->
<!--            </dependency>-->
            <!-- 权限认证  End -->
            <dependency>
                <groupId>com.distributed</groupId>
                <artifactId>distributed-common-util</artifactId>
                <version>${project-t.version}</version>
            </dependency>
            <dependency>
                <groupId>com.distributed</groupId>
                <artifactId>distributed-common-cache</artifactId>
                <version>${project-t.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baidu.fsg</groupId>
                <artifactId>uid-generator</artifactId>
                <version>${generator-version}</version>
            </dependency>
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>${mybatis-spring-version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <!-- 热部署组件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.projectlombok</groupId>-->
<!--            <artifactId>lombok</artifactId>-->
<!--            <version>${lombok.version}</version>-->
<!--        </dependency>-->
    </dependencies>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.0.RELEASE</version>
        <relativePath/>
    </parent>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>true</executable>
                </configuration>
            </plugin>
        </plugins>

        <!--        <resources>-->
        <!--            <resource>-->
        <!--                <directory>src/main/resources/</directory>-->
        <!--                &lt;!&ndash;打包时先排除掉三个文件夹&ndash;&gt;-->
        <!--                <excludes>-->
        <!--                    <exclude>dev/*</exclude>-->
        <!--                    <exclude>prod/*</exclude>-->
        <!--                    <exclude>test/*</exclude>-->
        <!--                </excludes>-->
        <!--                <includes>-->
        <!--                    &lt;!&ndash;如果有其他定义通用文件，需要包含进来&ndash;&gt;-->
        <!--                    &lt;!&ndash;<include>messages/*</include>&ndash;&gt;-->
        <!--                </includes>-->
        <!--            </resource>-->
        <!--            <resource>-->
        <!--                &lt;!&ndash;这里是关键！ 根据不同的环境，把对应文件夹里的配置文件打包&ndash;&gt;-->
        <!--                <directory>src/main/resources/${profiles.active}</directory>-->
        <!--            </resource>-->
        <!--        </resources>-->
    </build>

    <!--    <profiles>-->
    <!--        <profile>-->
    <!--            &lt;!&ndash;不同环境Profile的唯一id&ndash;&gt;-->
    <!--            <id>dev</id>-->
    <!--            <properties>-->
    <!--                &lt;!&ndash;profiles.active是自定义的字段，自定义字段可以有多个&ndash;&gt;-->
    <!--                <profiles.active>dev</profiles.active>-->
    <!--            </properties>-->
    <!--            &lt;!&ndash;activation用来指定激活方式，可以根据jdk环境，环境变量，文件的存在或缺失&ndash;&gt;-->
    <!--            <activation>-->
    <!--                &lt;!&ndash;这个字段表示默认激活&ndash;&gt;-->
    <!--                <activeByDefault>true</activeByDefault>-->
    <!--            </activation>-->
    <!--        </profile>-->
    <!--        <profile>-->
    <!--            <id>prod</id>-->
    <!--            <properties>-->
    <!--                <profiles.active>prod</profiles.active>-->
    <!--            </properties>-->
    <!--        </profile>-->
    <!--        <profile>-->
    <!--            <id>test</id>-->
    <!--            <properties>-->
    <!--                <profiles.active>test</profiles.active>-->
    <!--            </properties>-->
    <!--        </profile>-->
    <!--    </profiles>-->


    <!--    &lt;!&ndash; 配置资源上传远程仓库服务 &ndash;&gt;-->
    <!--    <distributionManagement>-->
    <!--        <snapshotRepository>-->
    <!--            <id>snapshot</id>-->
    <!--            <name>Nexus Release Repository</name>-->
    <!--            <url>http://106.13.84.177:8000/repository/maven-snapshots/</url>-->

    <!--        </snapshotRepository>-->
    <!--        <repository>-->
    <!--            <id>release</id>-->
    <!--            <name>Nexus Release Repository</name>-->
    <!--            <url>http://106.13.84.177:8000/repository/maven-releases/</url>-->
    <!--        </repository>-->
    <!--    </distributionManagement>-->

    <!-- 配置资源本地资源下载仓库服务 -->
    <repositories>
        <repository>
            <id>nexus</id>
            <name>Team Nexus Repository</name>
            <url>http://119.3.215.143:8000/repository/maven-public/</url>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <name>Team Nexus Repository</name>
            <url>http://119.3.215.143:8000/repository/maven-public/</url>
        </pluginRepository>
    </pluginRepositories>

    <!-- 推送远程仓库 -->
    <distributionManagement>
        <snapshotRepository>
            <id>snapshot-zy</id>
            <name>Nexus Release Repository</name>
            <url>http://119.3.215.143:8000/repository/maven-snapshots/</url>

        </snapshotRepository>
        <repository>
            <id>release-zy</id>
            <name>Nexus Release Repository</name>
            <url>http://119.3.215.143:8000/repository/maven-releases/</url>
        </repository>

        <!--        http://119.3.215.143:8000/repository/docker-registry/-->
    </distributionManagement>
</project>