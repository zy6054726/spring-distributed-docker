<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.distributed</groupId>
    <artifactId>spring-distributed-docker</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>distributed-oauth</module>
        <module>distributed-common</module>
        <module>distributed-zuul</module>
    </modules>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <druid.version>1.1.10</druid.version>
        <mysql.version>5.1.47</mysql.version>
        <mybatisplus-spring.version>1.0.5</mybatisplus-spring.version>
        <mybatisplus.version>2.1.8</mybatisplus.version>
        <lombok.version>1.18.8</lombok.version>
        <tk.mapper.version>3.3.6</tk.mapper.version>
        <velocity.version>2.0</velocity.version>
        <function.version>1.0</function.version>
        <!-- spring cloud体系 -->
        <zuul-spring.version>1.4.6.RELEASE</zuul-spring.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>Brussels-SR10</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Edgware.SR5</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- zuul网关 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-zuul</artifactId>
                <version>${zuul-spring.version}</version>
            </dependency>

            <!-- 阿里巴巴连接数据库 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <!-- mysql -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>
            <!-- mybatisplus集成 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatisplus-spring-boot-starter</artifactId>
                <version>${mybatisplus-spring.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatisplus.version}</version>
            </dependency>

            <!-- 模板引擎 -->
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>${velocity.version}</version>
            </dependency>

            <!-- 模板引擎，需要指定 mpg.setTemplateEngine(new FreemarkerTemplateEngine()); -->
            <dependency>
                <groupId>org.freemarker</groupId>
                <artifactId>freemarker</artifactId>
                <version>${freemarker.version}</version>
            </dependency>

            <!-- tk.mybatis 插件引用 -->
            <dependency>
                <groupId>tk.mybatis</groupId>
                <artifactId>mapper</artifactId>
                <version>${tk.mapper.version}</version>
            </dependency>

            <!-- mybatis集成分页插件pageHelper -->
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>4.1.3</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>com.function</groupId>
            <artifactId>function-common</artifactId>
            <version>${function.version}</version>
        </dependency>

        <!-- 热部署组件 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>
    </dependencies>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.2.RELEASE</version>
    </parent>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>true</executable>
                </configuration>
            </plugin>

            <!-- docker的maven插件，官网：https://github.com/spotify/docker-maven-plugin -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.12</version>
                <configuration>
                    <!-- 注意imageName一定要是符合正则[a-z0-9-_.]的，否则构建不会成功 -->
                    <!-- 详见：https://github.com/spotify/docker-maven-plugin
                     Invalid repository name ... only [a-z0-9-_.] are allowed-->
                    <imageName>spring-distributed-docker</imageName>
                    <baseImage>java</baseImage>
                    <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>

<!--        <resources>-->
<!--            <resource>-->
<!--                <directory>src/main/resources/</directory>-->
<!--                &lt;!&ndash;打包时先排除掉三个文件夹&ndash;&gt;-->
<!--                <excludes>-->
<!--                    <exclude>dev/*</exclude>-->
<!--                    <exclude>prod/*</exclude>-->
<!--                    <exclude>test/*</exclude>-->
<!--                </excludes>-->
<!--                <includes>-->
<!--                    &lt;!&ndash;如果有其他定义通用文件，需要包含进来&ndash;&gt;-->
<!--                    &lt;!&ndash;<include>messages/*</include>&ndash;&gt;-->
<!--                </includes>-->
<!--            </resource>-->
<!--            <resource>-->
<!--                &lt;!&ndash;这里是关键！ 根据不同的环境，把对应文件夹里的配置文件打包&ndash;&gt;-->
<!--                <directory>src/main/resources/${profiles.active}</directory>-->
<!--            </resource>-->
<!--        </resources>-->
    </build>

<!--    <profiles>-->
<!--        <profile>-->
<!--            &lt;!&ndash;不同环境Profile的唯一id&ndash;&gt;-->
<!--            <id>dev</id>-->
<!--            <properties>-->
<!--                &lt;!&ndash;profiles.active是自定义的字段，自定义字段可以有多个&ndash;&gt;-->
<!--                <profiles.active>dev</profiles.active>-->
<!--            </properties>-->
<!--            &lt;!&ndash;activation用来指定激活方式，可以根据jdk环境，环境变量，文件的存在或缺失&ndash;&gt;-->
<!--            <activation>-->
<!--                &lt;!&ndash;这个字段表示默认激活&ndash;&gt;-->
<!--                <activeByDefault>true</activeByDefault>-->
<!--            </activation>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            <id>prod</id>-->
<!--            <properties>-->
<!--                <profiles.active>prod</profiles.active>-->
<!--            </properties>-->
<!--        </profile>-->
<!--        <profile>-->
<!--            <id>test</id>-->
<!--            <properties>-->
<!--                <profiles.active>test</profiles.active>-->
<!--            </properties>-->
<!--        </profile>-->
<!--    </profiles>-->


    <!-- 配置资源上传远程仓库服务 -->
    <distributionManagement>
        <snapshotRepository>
            <id>snapshot</id>
            <name>Nexus Release Repository</name>
            <url>http://106.13.84.177:8000/repository/maven-snapshots/</url>

        </snapshotRepository>
        <repository>
            <id>release</id>
            <name>Nexus Release Repository</name>
            <url>http://106.13.84.177:8000/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

    <!-- 配置资源本地资源下载仓库服务 -->
    <repositories>
        <repository>
            <id>nexus</id>
            <name>Team Nexus Repository</name>
            <url>http://106.13.84.177:8000/repository/maven-public/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <name>Team Nexus Repository</name>
            <url>http://106.13.84.177:8000/repository/maven-public/</url>
        </pluginRepository>
    </pluginRepositories>
</project>